
--DROP TABLE SHOP;

CREATE TABLE DISTRICT(
		DISTRICT_ID INTEGER generated by DEFAULT AS identity(start with 100 INCREMENT BY 1),
		DISTRICT_NAME VARCHAR2(100) NOT NULL,
		CONSTRAINT DISTRICT_PK PRIMARY KEY (DISTRICT_ID)
);

CREATE TABLE ADDRESS_DETAIL(
		address_id INTEGER generated by DEFAULT AS identity(start with 1100 INCREMENT BY 1),
		street VARCHAR2(512) ,
		thana VARCHAR2(512) ,
		postal_code VARCHAR2(30),
		DISTRICT_ID INTEGER,
		CONSTRAINT ADDRESS_DETAIL_PK PRIMARY KEY (address_id),
		CONSTRAINT ADDRESS_DETAIL_DISTRICT_FK FOREIGN KEY (DISTRICT_id) REFERENCES DISTRICT(DISTRICT_ID) ON DELETE CASCADE
);
CREATE TABLE CUSTOMER(
		CUSTOMER_id INTEGER generated by DEFAULT AS identity(start with 500 INCREMENT BY 1),
		first_name VARCHAR2(512) NOT NULL,
		last_name VARCHAR2(512) NOT NULL,
		email VARCHAR2(128) NOT NULL,
		username VARCHAR2(100),
		pass VARCHAR2(100),
		signup_date DATE DEFAULT SYSDATE,
		address_id INTEGER,
		CONSTRAINT CUSTOMER_PK PRIMARY KEY (CUSTOMER_id),
		CONSTRAINT CUSTOMER_ADREESS_FK FOREIGN KEY (address_id) REFERENCES ADDRESS_DETAIL(ADDRESS_ID) ON DELETE CASCADE
);
CREATE TABLE Shop(
		shop_id INTEGER generated by DEFAULT AS identity(start with 20020 INCREMENT BY 1),
		shop_name VARCHAR2(512) NOT NULL,
		address_id INTEGER,
		contact_no VARCHAR2(30) NOT NULL,
		email VARCHAR2(100) not NULL,
		description VARCHAR2(3000),
		username VARCHAR2(100),
		pass VARCHAR2(100),
		total_earning INTEGER DEFAULT 0,
		CONSTRAINT SHOP_PK PRIMARY KEY (shop_id),
		CONSTRAINT SHOP_ADREESS_FK FOREIGN KEY (address_id) REFERENCES ADDRESS_DETAIL(ADDRESS_ID) ON DELETE CASCADE	
);
DELETE from shop where shop_id=20022;
SELECT * FROM SHOP;

/*CREATE TABLE users(
		user_name VARCHAR2(200) NOT NULL,
  	password VARCHAR2(512) NOT NULL,
		CUSTOMER_ID INTEGER,
		SHOP_ID INTEGER,
		CONSTRAINT USERS_PK PRIMARY KEY (user_name, PASSWORD),
		CONSTRAINT users_customer_FK FOREIGN KEY (CUSTOMER_id) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE,
		CONSTRAINT users_shop_FK FOREIGN KEY (SHOP_id) REFERENCES SHOP(SHOP_ID) ON DELETE CASCADE--
);*/


------------------------------------------------book/author/publisher----------------------------

CREATE TABLE AUTHOR(
		author_id INTEGER generated by DEFAULT AS identity(start with 1001000 INCREMENT BY 1),
		author_name VARCHAR2(512) NOT NULL,
		author_summary VARCHAR2(3000),
		address_id INTEGER,
		CONSTRAINT AUTHOR_PK PRIMARY KEY (author_id),
		CONSTRAINT AUTHOR_ADREESS_FK FOREIGN KEY (address_id) REFERENCES ADDRESS_DETAIL(ADDRESS_ID) ON DELETE CASCADE
);

CREATE TABLE PUBLISHER(
		publisher_id INTEGER generated by DEFAULT AS identity(start with 100100 INCREMENT BY 1),
		publisher_name VARCHAR2(512) NOT NULL,
		publisher_summary VARCHAR2(3000),
		address_id INTEGER,
		CONSTRAINT PUBLISHER_PK PRIMARY KEY (publisher_id),
		CONSTRAINT PUBLISHER_ADREESS_FK FOREIGN KEY (address_id) REFERENCES ADDRESS_DETAIL(ADDRESS_ID) ON DELETE CASCADE
);


CREATE TABLE BOOK(
		book_id INTEGER generated by DEFAULT AS identity(start with 10001000 INCREMENT BY 1),
		book_name VARCHAR2(512) NOT NULL,
		book_genre VARCHAR2(512),
		author_id INTEGER NOT NULL,
		publisher_id INTEGER NOT NULL,
		language VARCHAR2(128),
		summary VARCHAR2(3000),
		ISBN VARCHAR2(100) DEFAULT '0',
		pages INTEGER ,
		quantity INTEGER DEFAULT 1,
		edition VARCHAR2(512),
		price_per_book INTEGER NOT NULL,
		ratings decimal(3,2) DEFAULT 0,
		no_of_ratings INTEGER DEFAULT 0,
		CONSTRAINT BOOK_PK PRIMARY KEY (book_id),
		CONSTRAINT BOOK_AUTHOR_FK FOREIGN KEY(author_id) REFERENCES AUTHOR(author_id) ON DELETE CASCADE,
		CONSTRAINT BOOK_PUBLISHER_FK FOREIGN KEY(publisher_id) REFERENCES PUBLISHER(publisher_id) ON DELETE CASCADE 
);

------------------------------------------------------------book-------------------

SELECT AUTHOR_NAME,BOOK_NAME,BOOK_GENRE,SUMMARY,PUBLISHER_NAME FROM AUTHOR a join (SELECT BOOK_NAME,BOOK_GENRE,SUMMARY,AUTHOR_ID,PUBLISHER_ID from BOOK where BOOK_ID=10001000) b
ON(a.AUTHOR_ID = b.AUTHOR_ID)
join PUBLISHER p
on(b.PUBLISHER_ID= p.PUBLISHER_ID);
SELECT * from book where UPPER(BOOK_NAME)=UPPER('gitanjoli');
---------------------------------------------

CREATE TABLE BOOK_COPY(
		book_copy_id INTEGER generated by DEFAULT AS identity(start with 100001000 INCREMENT BY 1),	
		book_id INTEGER NOT NULL,
		shop_id INTEGER NOT NULL,
		CONSTRAINT BOOK_COPY_PK PRIMARY KEY (book_copy_id),
		CONSTRAINT BOOK_COPY_BOOK_FK FOREIGN KEY(book_id) REFERENCES BOOK(book_id) ON DELETE CASCADE,
		CONSTRAINT BOOK_COPY_SHOP_FK FOREIGN KEY(shop_id) REFERENCES SHOP(shop_id) ON DELETE CASCADE
);

-----------------------------------------------------------admin---------------------------------

CREATE TABLE ADMIN(
		ADMIN_ID INTEGER generated by DEFAULT AS identity(start with 100 INCREMENT BY 1),
		NAME VARCHAR2(100) NOT NULL,
		USERNAME VARCHAR2(100),
		PASS VARCHAR2(100),
		CONSTRAINT ADMIN_PK PRIMARY KEY (ADMIN_ID)
);
SELECT *FROM ADMIN WHERE ADMIN_ID=100;
INSERT INTO ADMIN (name,username,pass) values ('asif','asif111','111');

-------------------------------------temp shop-------------------------------------------

CREATE TABLE Temp_Shop(
		T_shop_id INTEGER generated by DEFAULT AS identity(start with 100 INCREMENT BY 1),
		shop_name VARCHAR2(512) NOT NULL,
		dist VARCHAR2(100),
		thana VARCHAR2(100),
		street VARCHAR2(100),
		pcode VARCHAR2(100),
		contact_no VARCHAR2(30) NOT NULL,
		email VARCHAR2(100) not NULL,
		description VARCHAR2(3000),
		username VARCHAR2(100),
		pass VARCHAR2(100),
		trn_id VARCHAR2(200),
		CONSTRAINT Temp_Shop_PK PRIMARY KEY (T_shop_id)
		
);
INSERT into Temp_Shop (shop_name,email,street,thana,pcode,dist,username,pass,contact_no,description,trn_id) VALUES ('New book', 'book21@gmail.com', 'Neelkhet', 'New Market', '1332', 'Dhaka', 'bbaxzn', '444', '01794577852', NULL,'123456');
DROP table temp_shop;
DELETE FROM temp_shop where t_shop_id=101;
SELECT * from temp_shop;

---------------------------------------------------------------cart-------------------------------------------


CREATE TABLE CART_DETAILS(
		BOOK_ID INTEGER NOT NULL,
		CUSTOMER_ID INTEGER NOT NULL,
		SHOP_ID INTEGER NOT NULL,
		PRICE_PER_BOOK NUMBER NOT NULL,
		CONSTRAINT CART_DETAILS_PK PRIMARY KEY(BOOK_ID, CUSTOMER_ID),
		CONSTRAINT CART_DETAILS_CUSTOMER_FK FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_id)
		ON DELETE CASCADE,
		CONSTRAINT CART_DETAILS_BOOK_FK FOREIGN KEY(book_id) REFERENCES BOOK(book_id)
		ON DELETE CASCADE,
		CONSTRAINT CART_DETAILS_SHOP_FK FOREIGN KEY(shop_id) REFERENCES SHOP(SHOP_id)
		ON DELETE CASCADE
);

-----------------------------------------------orders------------------------------------------------------------------------------

drop TABLE CART_DETAILS;

CREATE TABLE ORDERS(
		ORDER_ID INTEGER generated by DEFAULT AS identity(start with 1000000045 INCREMENT BY 2),
		SHOP_ID INTEGER NOT NULL,
		book_id INTEGER NOT NULL,
		CUSTOMER_ID INTEGER,
		QUANTITY NUMBER NOT NULL,
		TOTAL_PRICE NUMBER NOT NULL,
		TRANSACTION_ID VARCHAR2(100) NOT NULL,
		ADDRESS_ID INTEGER NOT NULL,
		CONSTRAINT ORDERS_PK PRIMARY KEY(order_id),
		
		CONSTRAINT ORDERS_BOOK_FK FOREIGN KEY(book_id) REFERENCES BOOK(book_id)
		ON DELETE CASCADE,
		CONSTRAINT ORDERS_SHOP_FK FOREIGN KEY(shop_id) REFERENCES SHOP(SHOP_id)
		ON DELETE CASCADE,
		CONSTRAINT ORDERS_ADDRESS_FK FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS_DETAIL(ADDRESS_ID)
		ON DELETE CASCADE
);
SELECT * from orders;
------------------------------------------------end---------------------------------
---CONSTRAINT ORDERS_CUSTOMER_FK FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_id)
	--	ON DELETE CASCADE,
SELECT BOOK_NAME,PRICE_PER_BOOK,BOOK_ID, from BOOK WHERE UPPER(BOOK_GENRE)like UPPER('%horror%');

SELECT * from SHOP;
DELETE FROM SHOP WHERE SHOP_ID=20102;
SELECT BOOK_NAME FROM BOOK
WHERE UPPER(BOOK_GENRE) LIKE '%NOVEL%';















